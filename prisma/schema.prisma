// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int @id @default(autoincrement())
  nombre        String
  apellido      String
  email         String @unique
  contrasenia   String
  ultimo_acceso DateTime?
  nro_puerta    Int?
  localidad   String?
  calle       String?
  descripcion String?
  tipo        Tipo @default(USER)
  cant_intercambio Int @default(0)
  foto_perfil Bytes?
  telefono    String? @unique
  producto    Producto[]
}

model Producto {
  id          Int @id @default(autoincrement())
  titulo      String
  descripcion String
  tipo_trato  TipoTrato
  cantidad    Int @default(0)
  foto        Bytes?
  usuario     Usuario? @relation(fields: [userId], references: [id])
  userId     Int @unique
  categoria   CatProducto[]
  intercambioEnviado Intercambio[] @relation("ProductoEnviado")
  intercambioRecibido Intercambio[] @relation("ProductoRecibido")
 }

model Categoria {
  id          Int @id @default(autoincrement())
  nombre      String @unique
  producto    CatProducto[]
}

model CatProducto {
  id_prod     Int @id @default(autoincrement())
  id_cate     Int
  producto    Producto @relation(fields: [id_prod], references: [id])
  categoria   Categoria @relation(fields: [id_cate], references: [id])
}

model Intercambio {
  // producto    Producto @relation(fields: [id_prod1, id_prod2], references: [id])
  id          Int @id @default(autoincrement())
  producto_enviado Producto @relation("ProductoEnviado", fields: [id_producto_enviado], references: [id])
  producto_recibido Producto @relation("ProductoRecibido", fields: [id_producto_recibido], references: [id])
  id_producto_enviado    Int 
  id_producto_recibido   Int
  estado      Estado @default(ESPERANDO)
  
  @@unique([id_producto_enviado, id_producto_recibido])
}

enum Tipo {
  USER
  ADMIN
}

enum TipoTrato {
  INTERCAMBIO
  DONACION
}

enum Estado {
  ESPERANDO
  ACEPTADO
  RECHAZADO
  CANCELADO
}
